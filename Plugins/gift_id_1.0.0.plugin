__id__ = "gift_id"
__name__ = "Gift ID"
__author__ = "@PESSDES_Plugins"
__version__ = "1.0.0"
__description__ = """Shows the gift ID in its info"""

from org.telegram.tgnet.tl import TL_stars
from org.telegram.ui.Stars import StarGiftSheet, StarsController
from org.telegram.ui.Gifts import SendGiftSheet
from org.telegram.messenger import AndroidUtilities
from org.telegram.ui.Components import TableView, LayoutHelper, UItem, UniversalAdapter
from android_utils import log as logcat
from hook_utils import get_private_field
from base_plugin import MethodHook
from java import dynamic_proxy, jclass
from java.lang import Runnable, Integer, Boolean, Long
from ui.bulletin import BulletinHelper 
from android.content import Context
from android.view import Gravity
from client_utils import get_last_fragment
from base_plugin import BasePlugin
from java.util import ArrayList

__icon__ = "VoiceToText7/4"
__min_version__ = "11.12.0"

jint = Integer.TYPE
jlong = Long.TYPE
jbool = Boolean.TYPE

def log(msg):
    logcat(f"[{__id__}] {msg}")

class Plugin(BasePlugin):
    def on_plugin_load(self):     
        method = StarGiftSheet.getClass().getDeclaredMethod("set", TL_stars.SavedStarGift,     StarsController.IGiftsList)
        self.hook_method(method,     SavedGiftHook())

        method = StarGiftSheet.getClass().getDeclaredMethod("set", TL_stars.TL_starGiftUnique, jbool, jbool)
        self.hook_method(method,     SavedGiftHook())

        method = SendGiftSheet.getClass().getDeclaredMethod("fillItems", ArrayList, UniversalAdapter)
        self.hook_method(method,     SendGiftHook())
       

class OnCopy(dynamic_proxy(Runnable)):    
  def __init__(self, text: str):
    super().__init__()
    self.text = text

  def run(self):
    AndroidUtilities.addToClipboard(self.text)
    BulletinHelper.show_copied_to_clipboard()
   
def add_copy_row(table, id):
    table.addRow(
                    "ID",
                    str(id),
                    "копировать",
                    OnCopy(str(id))
                )

 
class SendGiftHook(MethodHook):
    def before_hooked_method(self, param):
        try:
            this = param.thisObject
            gift = get_private_field(this, "starGift")
            if not gift:
                return
            
            table_view =     TableView(get_last_fragment().getParentActivity(), None)
            add_copy_row(table_view, gift.id)
            param.args[0].add(UItem.asCustom(table_view))
        except Exception as e:
            log(f"Error in SendGiftHook: {str(e)}")

class SavedGiftHook(MethodHook):
    def after_hooked_method(self, param):
        try:
            this = param.thisObject
            gift = None
            if isinstance(param.args[0], TL_stars.SavedStarGift):
                gift = param.args[0].gift
                if isinstance(gift, TL_stars.TL_starGiftUnique):
                    return
            else:
                gift = param.args[0]

            table_view = get_private_field(this, "tableView")
            if table_view:
                add_copy_row(table_view, gift.id)
        except Exception as e:
            log(f"Error in SavedGiftHook: {str(e)}")