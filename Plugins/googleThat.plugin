"""
Если вы при разработке своего плагина использовали готовые фрагменты кода из моего, пожалуйста,
укажите в описании своего плагина @zwylair в качестве благодарности за вклад в разработку. Спасибо ♥

If you used code snippets from my plugin in the development of your own, please credit @zwylair
in your plugin’s description as a thank you for the contribution. Thanks ♥


⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣤⣤⣤⣀⠀⠀⠀⠀⣀⣠⣤⣤⣤⣄⡀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣿⠿⠛⠛⠛⠛⠛⢿⣷⣤⣾⠿⠛⠛⠙⠛⠛⠿⠗
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⡿⠁⠀⠀⠀⠀⠀⠀⠀⠙⡿⠁⠀⠀⠀⢀⣤⣀⠀⠀⢀⣤⣶⡆
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣿⣿⣿⣿⣿⡇
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⣿⣿⣿⣧⣄
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⠀⣿⣷⣄⣀⣤⡄⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⠷
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣁⣤⣿⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠘⠛⠛⠛⠻⣿⣿⣿⠋⠉⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠻⢿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠹⣿⡟⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⠟⢙⠛⠛⠀⠀⠀⠀⠀⠀⣀⣴⡿⠓⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠀⠈⠻⢿⣦⣄⠀⣠⣾⡿⠋⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣿⠿⠋⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀
"""

import traceback
from typing import Optional, Callable, Any
from urllib.parse import quote

from ui.settings import Header, Selector, Divider
from base_plugin import BasePlugin, HookResult, HookStrategy

from java.util import Locale

__name__ = "GoogleThat"
__description__ = "Creates search link [.gt <query>] (requires zwylib)"
__icon__ = "zwyPluginsIcons/2"
__id__ = "googlethat"
__version__ = "1.0.3"
__author__ = "@zwylair"
__min_version__ = "11.12.1"


class Locales:
    en = {
        "zwylib_was_not_found": "ZwyLib plugin required for this plugin is not found!",
        "install_bulletin_button": "Install",
        "settings_usage_header": "Usage",
        "settings_usage_text": ".gt <query>",
        "settings_search_engine": "Search Engine",
    }
    ru = {
        "zwylib_was_not_found": "Требуемый плагин ZwyLib не найден!",
        "install_bulletin_button": "Установить",
        "settings_usage_header": "Использование",
        "settings_usage_text": ".gt <запрос>",
        "settings_search_engine": "Поисковик",
    }
    uk = {
        "zwylib_was_not_found": "Не знайдено обов’язковий плагін ZwyLib!",
        "install_bulletin_button": "Встановити",
        "settings_usage_header": "Використання",
        "settings_usage_text": ".gt <запит>",
        "settings_search_engine": "Пошуковик",
    }
    default = en


def localise(key: str) -> str:
    locale = Locale.getDefault().getLanguage()
    locale_dict = getattr(Locales, locale, Locales.default)
    return locale_dict.get(key, key)


def register_commands():
    dp = zwylib.command_manager.get_dispatcher(__id__)

    @dp.register_command("gt")
    def google_that_command(params, account: int, *args) -> HookResult:
        search_engine_index = setting_getter("search_engine", DEFAULT_SEARCH_ENGINE)
        search_engine = list(SEARCH_ENGINES.keys())[search_engine_index]
        search_text = " ".join(map(str, args)).strip()

        params.message = SEARCH_ENGINES[search_engine] + quote(search_text)
        return HookResult(strategy=HookStrategy.MODIFY, params=params)


AUTOUPDATE_CHANNEL_ID = 2521243181
AUTOUPDATE_MSG_ID = 33
LOG_PREFIX = __name__
LOCALE = Locale.getDefault().getLanguage()

SEARCH_ENGINES = {
    "Google": "https://www.google.com/search?q=",
    "Bing": "https://www.bing.com/search?q=",
    "Yahoo": "https://search.yahoo.com/search?p=",
    "DuckDuckGo": "https://duckduckgo.com/?q=",
    "Baidu": "https://www.baidu.com/s?wd=",
    "Yandex": "https://yandex.com/search/?text=",
    "Ecosia": "https://www.ecosia.org/search?q=",
    "Ask": "https://www.ask.com/web?q=",
    "LetMeGoogleThatForYou": "https://letmegooglethat.com/?q="
}
DEFAULT_SEARCH_ENGINE = 0

try:
    import zwylib
except (ImportError, ModuleNotFoundError):
    raise Exception(localise("zwylib_was_not_found"))

logger = zwylib.build_log(LOG_PREFIX)
BulletinHelper = zwylib.build_bulletin_helper(LOG_PREFIX)
setting_getter: Optional[Callable[[str, Optional[Any]], Any]] = None


class GoogleThat(BasePlugin):
    def on_plugin_load(self):
        global setting_getter
        setting_getter = self.get_setting

        zwylib.add_autoupdater_task(__id__, AUTOUPDATE_CHANNEL_ID, AUTOUPDATE_MSG_ID)
        register_commands()
        logger.info("Loaded")

    def on_plugin_unload(self):
        zwylib.remove_autoupdater_task(__id__)
        logger.info("Unloaded")

    def create_settings(self):
        return [
            Header(text=localise("settings_usage_header")),
            Divider(text=".gt <query>"),
            Header(text=localise("settings_usage_text")),
            Selector(
                key="search_engine",
                text=localise("settings_search_engine"),
                default=DEFAULT_SEARCH_ENGINE,
                icon="msg2_language",
                items=list(SEARCH_ENGINES.keys())
            ),
        ]
